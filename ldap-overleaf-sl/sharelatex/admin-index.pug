extends ../layout

block content
	.content.content-alt
		.container
			.row
				.col-xs-12
					.card(ng-controller="RegisterUsersController")
						.page-header
							h1 Admin Panel
						tabset(ng-cloak)
							tab(heading="System Messages")
								each message in systemMessages
									.alert.alert-info.row-spaced(ng-non-bindable) #{message.content}
								hr
								form(method='post', action='/admin/messages')
									input(name="_csrf", type="hidden", value=csrfToken)
									.form-group
										label(for="content")
										input.form-control(name="content", type="text", placeholder="Message...", required)
									button.btn.btn-primary(type="submit") Post Message
								hr
								form(method='post', action='/admin/messages/clear')
									input(name="_csrf", type="hidden", value=csrfToken)
									button.btn.btn-danger(type="submit") Clear all messages


							tab(heading="Register non LDAP User")
								form.form
								.row
									.col-md-4.col-xs-8
										input.form-control(
										name="email",
										type="text",
										placeholder="jane@example.com, joe@example.com",
										ng-model="inputs.emails",
										on-enter="registerUsers()"
									)
									.col-md-8.col-xs-4
										button.btn.btn-primary(ng-click="registerUsers()") #{translate("register")}

									.row-spaced(ng-show="error").ng-cloak.text-danger
										p Sorry, an error occured

									.row-spaced(ng-show="users.length > 0").ng-cloak.text-success
										p We've sent out welcome emails to the registered users.
										p You can also manually send them URLs below to allow them to reset their password and log in for the first time.
										p (Password reset tokens will expire after one week and the user will need registering again).

									hr(ng-show="users.length > 0").ng-cloak
									table(ng-show="users.length > 0").table.table-striped.ng-cloak
										tr
												th #{translate("email")}
												th Set Password Url
										tr(ng-repeat="user in users")
												td {{ user.email }}
												td(style="word-break: break-all;") {{ user.setNewPasswordUrl }}
							tab(heading="Open/Close Editor" bookmarkable-tab="open-close-editor")
								if hasFeature('saas')
									| The "Open/Close Editor" feature is not available in SAAS.
								else
									.row-spaced
										form(method='post',action='/admin/closeEditor')
											input(name="_csrf", type="hidden", value=csrfToken)
											button.btn.btn-danger(type="submit") Close Editor
										p.small Will stop anyone opening the editor. Will NOT disconnect already connected users.

									.row-spaced
										form(method='post',action='/admin/disconnectAllUsers')
											input(name="_csrf", type="hidden", value=csrfToken)
											button.btn.btn-danger(type="submit") Disconnect all users
										p.small Will force disconnect all users with the editor open. Make sure to close the editor first to avoid them reconnecting.

									.row-spaced
										form(method='post',action='/admin/openEditor')
											input(name="_csrf", type="hidden", value=csrfToken)
											button.btn.btn-danger(type="submit") Reopen Editor
										p.small Will reopen the editor after closing.
